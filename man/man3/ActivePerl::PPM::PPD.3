.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ActivePerl::PPM::PPD 3"
.TH ActivePerl::PPM::PPD 3 "2017-06-23" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ActivePerl::PPM::PPD \- Parser for PPD files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  my $ppd = ActivePerl::PPM::Package\->new_ppd(\*(Aq<SOFTPKG NAME="Foo">...</SOFTPKG>\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module adds the \f(CW\*(C`new_ppd\*(C'\fR constructor to the
\&\f(CW\*(C`ActivePerl::PPM::Package\*(C'\fR class.  This constructor parses \s-1PPD\s0
files and allow package objects to be initialized from these
files. \s-1PPD\s0 is an \s-1XML\s0 based format that is used to describe \s-1PPM\s0
packages.
.PP
The following methods are added:
.ie n .IP "$ppd = ActivePerl::PPM::Package\->new_ppd( $ppd_document, %opt )" 4
.el .IP "\f(CW$ppd\fR = ActivePerl::PPM::Package\->new_ppd( \f(CW$ppd_document\fR, \f(CW%opt\fR )" 4
.IX Item "$ppd = ActivePerl::PPM::Package->new_ppd( $ppd_document, %opt )"
.PD 0
.ie n .IP "$ppd = ActivePerl::PPM::Package\->new_ppd( $parsed_ppd_hashref, %opt )" 4
.el .IP "\f(CW$ppd\fR = ActivePerl::PPM::Package\->new_ppd( \f(CW$parsed_ppd_hashref\fR, \f(CW%opt\fR )" 4
.IX Item "$ppd = ActivePerl::PPM::Package->new_ppd( $parsed_ppd_hashref, %opt )"
.PD
The constructor take a literal document as argument and will return
and object representing the \s-1PPD.\s0  The method returns \f(CW\*(C`undef\*(C'\fR if
\&\f(CW$ppd_document\fR does not contain the expected \s-1XML.\s0
.Sp
The following options are supported:
.RS 4
.ie n .IP "arch => $archname" 4
.el .IP "arch => \f(CW$archname\fR" 4
.IX Item "arch => $archname"
The \f(CW$archname\fR should be specified to select attributes for a specific
architecture where the \s-1PPD\s0 describes multiple implementations.  The
value \f(CW\*(C`noarch\*(C'\fR is the default and will only select
implementation sections without any \s-1ARCHITECTURE\s0 restriction.
.ie n .IP "base => $base_uri" 4
.el .IP "base => \f(CW$base_uri\fR" 4
.IX Item "base => $base_uri"
All URIs in the \s-1PPD\s0 will be made absolute with \f(CW$base_uri\fR as base.
.ie n .IP "rel_base => $base_uri" 4
.el .IP "rel_base => \f(CW$base_uri\fR" 4
.IX Item "rel_base => $base_uri"
All URIs in the \s-1PPD\s0 will be made relative if they can be resolved from
\&\f(CW$base_uri\fR.  Only safe to use together with \f(CW\*(C`base\*(C'\fR which is applied
first.  If both \f(CW\*(C`base\*(C'\fR and \f(CW\*(C`rel_base\*(C'\fR are the same, they cancel
each other out and the effect is the same as if none of them where
specified.
.RE
.RS 4
.RE
.SH "PPD XML FORMAT"
.IX Header "PPD XML FORMAT"
The \s-1PPM PPD\s0 is an \s-1XML\s0 based format used to describe \s-1PPM\s0 packages.
The format is based on the now defunct \s-1OSD\s0 specification
(<http://www.w3.org/TR/NOTE\-OSD>).  \s-1PPD\s0 files need to use the
\&\fI.ppd\fR suffix to be recognized.
.PP
This shows an example of a minimal \s-1PPD\s0 document:
.PP
.Vb 11
\&  <SOFTPKG NAME="Acme\-Buffy" VERSION="1.3" DATE="2002\-03\-27">
\&    <AUTHOR CPAN="LBROCARD">Leon Brocard &lt;leon@astray.com></AUTHOR>
\&    <ABSTRACT>
\&      An encoding scheme for Buffy the Vampire Slayer fans
\&    </ABSTRACT>
\&    <PROVIDE NAME="Acme::Buffy" VERSION="1.3"/>
\&    <IMPLEMENTATION>
\&      <CODEBASE HREF="i686\-linux\-thread\-multi\-5.8/Acme\-Buffy.tar.gz"/>
\&      <ARCHITECTURE NAME="i686\-linux\-thread\-multi\-5.8"/>
\&    </IMPLEMENTATION>
\&  </SOFTPKG>
.Ve
.PP
The following elements are used:
.IP "<\s-1ABSTRACT\s0>...</ABSTRACT>" 4
.IX Item "<ABSTRACT>...</ABSTRACT>"
Content is a short statement describing the purpose of this
package. No attributes.  Parent must be a \s-1SOFTPKG\s0 element.
.ie n .IP "<\s-1ARCHITECTURE\s0 NAME=""...""/>" 4
.el .IP "<\s-1ARCHITECTURE\s0 NAME=``...''/>" 4
.IX Item "<ARCHITECTURE NAME=.../>"
The required attribute \s-1NAME\s0 should match
\&\f(CW\*(C`$Config{archname}\-$major_vers\*(C'\fR for the perl this package was
compiled for.  If this element is missing, it's the same as
specifying <\s-1ARCHITECTURE\s0 NAME=\*(L"noarch\*(R"/>. No content.  Parent must be
either \s-1SOFTPKG\s0 or \s-1IMPLEMENTATION.\s0
.Sp
Packages or implementations marked with \*(L"noarch\*(R" are assumed to
installable on any architecture.
.ie n .IP "<\s-1AUTHOR\s0 CPAN=""..."">...</AUTHOR>" 4
.el .IP "<\s-1AUTHOR\s0 CPAN=``...''>...</AUTHOR>" 4
.IX Item "<AUTHOR CPAN=...>...</AUTHOR>"
Content is the package author's name (with email address). The
optional \s-1CPAN\s0 attribute can be used for \s-1CPAN\s0 packages to carry the
\&\s-1CPAN\s0 author \s-1ID.\s0 Parent must be a \s-1SOFTPKG\s0 element.
.ie n .IP "<\s-1CODEBASE\s0 HREF=""...""/>" 4
.el .IP "<\s-1CODEBASE\s0 HREF=``...''/>" 4
.IX Item "<CODEBASE HREF=.../>"
The required \s-1HREF\s0 attribute provides a \s-1URI\s0 where the binary package
(the tared up \f(CW\*(C`blib\*(C'\fR tree) of the package can be obtained.  The \s-1URI\s0
can be relative and is then resolved based on the \s-1URI\s0 of the \s-1PPD\s0
document.  The referenced file must either be a \fI.ppmx\fR, \fI.tar.gz\fR,
or \fI.zip\fR file.
.Sp
The \s-1CODEBASE\s0 element has no content.  Parent must be \s-1SOFTPKG\s0 or
\&\s-1IMPLEMENTATION.\s0
.ie n .IP "<\s-1DEPENDENCY\s0 NAME=""..."" VERSION=""...""/>" 4
.el .IP "<\s-1DEPENDENCY\s0 NAME=``...'' VERSION=``...''/>" 4
.IX Item "<DEPENDENCY NAME=... VERSION=.../>"
Deprecated.  Required attribute is \s-1NAME.\s0  Optional attribute is
\&\s-1VERSION.\s0  No content.  Element might be repeated any number of
times. Parent must be an \s-1IMPLEMENTATION\s0 element.
.Sp
This element expresses a dependency on another package with the given
name and with the given version number or better.  The other package
must be installed for this package to work.
.Sp
This element is still recommended for PPDs that are to be used by
both \s-1PPM4\s0 and \s-1PPM3\s0 clients, as the \s-1PPM3\s0 clients will ignore any
\&\s-1REQUIRE\s0 elements provided.  \s-1PPM4\s0 clients regard \s-1DEPENDENCY\s0 the same as
\&\s-1REQUIRE,\s0 but will simply ignore the \s-1VERSION\s0 provided.
.IP "<\s-1IMPLEMENTATION\s0>...</IMPLEMENTATION>" 4
.IX Item "<IMPLEMENTATION>...</IMPLEMENTATION>"
No attributes.  Optional container for \s-1ARCHITECTURE, DEPENDENCY,
INSTALL, PROVIDE, REQUIRE, UNINSTALL\s0 elements.  Parent must be
\&\s-1SOFTPKG.\s0  There can be multiple instances of \s-1IMPLEMENTATION\s0 but they
should each contain an \s-1ARCHITECTURE\s0 element that differ from each
other.
.ie n .IP "<\s-1INSTALL\s0 EXEC=""..."" HREF=""...""/>" 4
.el .IP "<\s-1INSTALL\s0 EXEC=``...'' HREF=``...''/>" 4
.IX Item "<INSTALL EXEC=... HREF=.../>"
.PD 0
.ie n .IP "<\s-1INSTALL\s0 EXEC=""..."">...</INSTALL>" 4
.el .IP "<\s-1INSTALL\s0 EXEC=``...''>...</INSTALL>" 4
.IX Item "<INSTALL EXEC=...>...</INSTALL>"
.PD
Optional attributes are \s-1EXEC\s0 and \s-1HREF.\s0  Textual content can be included.
Provides a script or commands to run after the \f(CW\*(C`blib\*(C'\fR files of the package
have been installed, a so called post-install script.  The script to
run can either be provided inline or externally via \s-1HREF.\s0  If both
are provided then only the \s-1HREF\s0 is used. Parent must be either \s-1SOFTPKG\s0 or
\&\s-1IMPLEMENTATION.\s0
.Sp
If \s-1EXEC\s0 is provided, it gives the name of the interpreter to run the
script.  For historical reasons, if the script is not obtained via \s-1HREF\s0
then any occurences of double semicolon \*(L";;\*(R" is replaced by newline
before it is saved in a temporary file and passed as the first argument to
the \s-1EXEC\s0 interpreter.  The special value \*(L"\s-1PPM_PERL\*(R"\s0 ensures that the
script runs with the same perl interpreter that runs \s-1PPM.\s0  The special
value \*(L"\s-1SELF\*(R"\s0 make the script run as a self contained executable.
.Sp
If \s-1EXEC\s0 is not provided, the commands of the script are passed to
the system command interpreter (via \f(CWsystem(3)\fR) one by one.  If the
script was obtained via \s-1HREF,\s0 each line is considered a command.
If the script was obtained from the content, then a double semicolon
\&\*(L";;\*(R" is used to separate commands.
.Sp
When the script/command runs it uses the unpacked package tarball
(obtained by downloading the \s-1CODEREF\s0) as the working directory, and
the following environment variables will be set:
.RS 4
.IP "\s-1PPM_ACTION\s0" 4
.IX Item "PPM_ACTION"
One of \*(L"install\*(R", \*(L"upgrade\*(R" or \*(L"uninstall\*(R".
.IP "\s-1PPM_INSTARCHLIB\s0" 4
.IX Item "PPM_INSTARCHLIB"
The archlib directory of the current install area.
.IP "\s-1PPM_INSTLIB\s0" 4
.IX Item "PPM_INSTLIB"
The lib directory of the current install area.
.IP "\s-1PPM_INSTPACKLIST\s0" 4
.IX Item "PPM_INSTPACKLIST"
The name of the installed \fI.packlist\fR file of the package.
.IP "\s-1PPM_INSTROOT\s0" 4
.IX Item "PPM_INSTROOT"
The prefix directory of the current install area.
.IP "\s-1PPM_NEW_VERSION\s0" 4
.IX Item "PPM_NEW_VERSION"
The version label of the package just installed.
.IP "\s-1PPM_PERL\s0" 4
.IX Item "PPM_PERL"
The path to the perl that runs \s-1PPM.\s0
.IP "\s-1PPM_PREV_VERSION\s0" 4
.IX Item "PPM_PREV_VERSION"
The version label that the package had before the upgrade started.
This variable is only present when \s-1PPM_ACTION\s0 is \*(L"upgrade\*(R".
.IP "\s-1PPM_VERSION\s0" 4
.IX Item "PPM_VERSION"
The version of \s-1PPM\s0 currently running.
.RE
.RS 4
.RE
.ie n .IP "<\s-1PROVIDE\s0 NAME=""..."" VERSION=""...""/>" 4
.el .IP "<\s-1PROVIDE\s0 NAME=``...'' VERSION=``...''/>" 4
.IX Item "<PROVIDE NAME=... VERSION=.../>"
Required attribute is \s-1NAME.\s0  Optional attribute is \s-1VERSION.\s0  No
content.  Element can be repeated any number of times.  Parent must
be either \s-1SOFTPKG\s0 or \s-1IMPLEMENTATION.\s0
.Sp
The \s-1NAME\s0 represents a feature that this package provides if installed.
Any label goes.  \s-1VERSION\s0 is a floating point number.
.Sp
Packages containing perl modules should have one \s-1PROVIDE\s0 element for
each module installed by the package.  Module names that do not
naturally contain double colon \*(L"::\*(R" should have \*(L"::\*(R" appended to them.
.IP "<\s-1REPOSITORY\s0>...</REPOSITORY>" 4
.IX Item "<REPOSITORY>...</REPOSITORY>"
Element must be root if present.  Container for a set of \s-1SOFTPKG\s0
elements.  Optional attributes are \s-1ARCHITECTURE\s0 and \s-1BASE.\s0
.Sp
\&\s-1ARCHITECTECTURE\s0 provides the default for all contained \s-1SOFTPKG\s0 elements
that do not have an explicit \s-1ARCHITECTECTURE\s0 element.
.Sp
\&\s-1BASE\s0 overrides the base \s-1URI\s0 that the relative URIs of \s-1CODEBASE, INSTALL\s0
and \s-1UNINSTALL\s0 are resolved from.  If \s-1BASE\s0 itself is relative, it is
first resolved based on the \s-1URI\s0 of the \s-1PPD\s0 document.
.Sp
The file name \fIpackage.xml\fR is commonly used for documents
containing a \s-1REPOSITORY\s0 root.
.IP "<\s-1REPOSITORYSUMMARY\s0>...</REPOSITORYSUMMARY>" 4
.IX Item "<REPOSITORYSUMMARY>...</REPOSITORYSUMMARY>"
Treated the same as \s-1REPOSITORY.\s0  Supported for backwards compatibility
with old style \fIpackage.lst\fR files.
.ie n .IP "<\s-1REQUIRE\s0 NAME=""..."" VERSION=""...""/>" 4
.el .IP "<\s-1REQUIRE\s0 NAME=``...'' VERSION=``...''/>" 4
.IX Item "<REQUIRE NAME=... VERSION=.../>"
Required attribute is \s-1NAME.\s0  Optional attribute is \s-1VERSION.\s0  No
content.  Element might be repeated any number of times.  Parent must
be either \s-1SOFTPKG\s0 or \s-1IMPLEMENTATION.\s0
.Sp
This element expresses a dependency on some other package that provides 
the feature given by \s-1NAME\s0 and with the given version number or better.
A package that provides the given feature must be installed for this
package to work.
.ie n .IP "<\s-1SOFTPKG\s0 NAME=""..."" VERSION=""..."" DATE=""..."">...</SOFTPKG>" 4
.el .IP "<\s-1SOFTPKG\s0 NAME=``...'' VERSION=``...'' DATE=``...''>...</SOFTPKG>" 4
.IX Item "<SOFTPKG NAME=... VERSION=... DATE=...>...</SOFTPKG>"
Represents a package available for \s-1PPM\s0 to install.  Container for all
the other elements defined here (except \s-1REPOSITORY\s0 and
\&\s-1REPOSITORYSUMMARY\s0).
.Sp
Required attributes are \s-1NAME\s0 and \s-1VERSION.\s0  Optional attribute is \s-1DATE.\s0
.Sp
The \s-1NAME\s0 and \s-1VERSION\s0 value can be any label.  Older versions of this
specification had a more strict definition of \s-1VERSION\s0 as a sequence of
exactly 4 numbers in the range 0 to 65535 separated by comma.  If such
values are encountered then they are converted to \*(L"standard\*(R" format by
replacing the commas with dots and trimming off \*(L".0.0\*(R" or \*(L".0\*(R".
.Sp
The \s-1DATE\s0 attribute should use \s-1ISO 8601\s0 formatted date (or datetime)
stamps.  That is \*(L"YYYY-MM-DD\*(R" or \*(L"YYYY\-MM\-DDThh:mm:ssZ\*(R" format.  See
<http://en.wikipedia.org/wiki/ISO_8601> for more information.
.Sp
Parent must be \s-1REPOSITORY\s0 or \s-1REPOSITORYSUMMARY,\s0 or the \s-1SOFTPKG\s0 can be
the document root.  Content elements can be in any order.
.Sp
Documents where \s-1SOFTPKG\s0 is root are normally stored in files with the
\&\fI.ppd\fR extension.
.ie n .IP "<\s-1UNINSTALL\s0 EXEC=""..."" HREF=""...""/>" 4
.el .IP "<\s-1UNINSTALL\s0 EXEC=``...'' HREF=``...''/>" 4
.IX Item "<UNINSTALL EXEC=... HREF=.../>"
.PD 0
.ie n .IP "<\s-1UNINSTALL\s0 EXEC=""..."">...</UNINSTALL>" 4
.el .IP "<\s-1UNINSTALL\s0 EXEC=``...''>...</UNINSTALL>" 4
.IX Item "<UNINSTALL EXEC=...>...</UNINSTALL>"
.PD
Used for scripts that run just before the \f(CW\*(C`blib\*(C'\fR files of the package
is uninstalled.  The attributes and content are treated the same as for
\&\s-1INSTALL\s0 and the same set of environment variables are availabe to the
script.
.Sp
The uninstall script runs with a new, clean temporary directory
as its working directory.  The directory and its content is removed after
the script finishes.
.SS "Changes since \s-1PPM3\s0"
.IX Subsection "Changes since PPM3"
The \s-1PPD\s0 format has changed in \s-1PPM4.\s0  This section lists the differences:
.IP "\(bu" 4
The format of the \s-1SOFTPKG/VERSION\s0 attribute has been relaxed.  This
attribute should now contain the version identifier as used for the
original package.  \s-1PPM\s0 will not be able to order packages based on
this label.
.IP "\(bu" 4
The \s-1SOFTPKG/DATE\s0 attribute has been introduced.  This should be the
release date of the package.  For \s-1CPAN\s0 packages this should be the
date when the package was uploaded to \s-1CPAN.\s0
.IP "\(bu" 4
Added \s-1REQUIRE\s0 and \s-1PROVIDE\s0 elements that are used to describe
features that this package depends on and provides.  The \s-1NAME\s0
attribute is required for both.  The \s-1VERSION\s0 attribute is optional and
should be a floating number.  Features are assumed to be backwards
compatible and a feature with a higher version number is regarded
as better.
.IP "\(bu" 4
The \s-1DEPENDENCY\s0 elements are deprecated.  Use \s-1REQUIRE\s0 instead.  If
present they are mapped to \s-1REQUIRE\s0 but their \s-1VERSION\s0 attribute is
ignored.
.IP "\(bu" 4
The \s-1OS, OSVERSION, PROCESSOR, PERLCORE\s0 elements are deprecated and
always ignored.  Implementations are matched using the \s-1ARCHITECTURE\s0
element only.
.IP "\(bu" 4
The \s-1TITLE\s0 element is deprecated and ignored.  The \s-1SOFTPKG/NAME\s0
attribute is the title.
.SH "REPOSITORYSUMMARY XML FORMAT"
.IX Header "REPOSITORYSUMMARY XML FORMAT"
Because it's inefficient to transfer lots of small \s-1PPD\s0 files
repositories usually collect them together in a \fIpackage.xml\fR file
and the ppm client know to look for this file when a new repository is
added.  The \fIpackage.xml\fR has the <\s-1REPOSITORYSUMMARY\s0> element as root
and its kids are the <\s-1SOFTPKG\s0> elements of the \s-1PPD\s0 files it
contains.
.PP
For historic reasons the tagname <\s-1REPOSITORY\s0> can be used as an
alternative to <\s-1REPOSITORYSUMMARY\s0>.
.PP
The <\s-1REPOSITORYSUMMARY\s0> tag allow for the following optional attributes:
.ie n .IP "BASE=""\fI\s-1URL\s0\fR""" 4
.el .IP "BASE=``\fI\s-1URL\s0\fR''" 4
.IX Item "BASE=""URL"""
The value is an absolute \s-1URL\s0 that's used as base for resolving any
relative URLs in the package descriptions.  If not provided the \s-1URL\s0 of
the \fIpackage.xml\fR file itself is the base.
.ie n .IP "ARCHITECTURE=""...""" 4
.el .IP "ARCHITECTURE=``...''" 4
.IX Item "ARCHITECTURE=..."
If specified this provide a default for the <\s-1ARCHITECTURE\s0 NAME=\*(L"...\*(R"/>
element in each of the embedded PPDs.  It's common to package together
all packages for a given architecture and this provide a way to avoid
repeating the <\s-1ARCHITECTURE\s0> element for every package.
.SH "PPMX FILE FORMAT"
.IX Header "PPMX FILE FORMAT"
A \s-1PPM\s0 package basically consist of a \s-1PPD\s0 file and the tarball of code
referenced by the <\s-1CODEBASE\s0> element.  It's often convenient to bundle
them together and that's what \s-1PPMX\s0 files provide for.  \s-1PPMX\s0 files are
\&\fI.tar.gz\fR files where the first file inside the tarball is the \s-1PPD\s0
file.  \s-1PPMX\s0 files need to use the \fI.ppmx\fR suffix to be recognized.
.PP
The name of the \s-1PPD\s0 file inside the tarball needs to end with \fI.ppd\fR
but the rest of the name can be anything.  The <\s-1CODEBASE\s0> of the
embedded \s-1PPD\s0 file is effectively ignored as it is forced to reference
the \s-1PPMX\s0 file itself.
.PP
Install and uninstall scripts embedded in the \s-1PPMX\s0 file are not
supported yet.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
ActivePerl::PPM::Package, <http://www.w3.org/TR/NOTE\-OSD>
