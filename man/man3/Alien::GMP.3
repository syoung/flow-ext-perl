.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::GMP 3"
.TH Alien::GMP 3 "2018-06-25" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Alien::GMP \- Alien package for the GNU Multiple Precision library.
.SH "VERSION"
.IX Header "VERSION"
version 1.14
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In your Build.PL:
.PP
.Vb 12
\& use Module::Build;
\& use Alien::GMP;
\& my $builder = Module::Build\->new(
\&   ...
\&   configure_requires => {
\&     \*(AqAlien::GMP\*(Aq => \*(Aq0\*(Aq,
\&     ...
\&   },
\&   extra_compiler_flags => Alien::GMP\->cflags,
\&   extra_linker_flags   => Alien::GMP\->libs,
\&   ...
\& );
\& 
\& $build\->create_build_script;
.Ve
.PP
In your Makefile.PL:
.PP
.Vb 3
\& use ExtUtils::MakeMaker;
\& use Config;
\& use Alien::GMP;
\& 
\& WriteMakefile(
\&   ...
\&   CONFIGURE_REQUIRES => {
\&     \*(AqAlien::GMP\*(Aq => \*(Aq0\*(Aq,
\&   },
\&   CCFLAGS => Alien::GMP\->cflags . " $Config{ccflags}",
\&   LIBS    => [ Alien::GMP\->libs ],
\&   ...
\& );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This distribution installs \s-1GMP\s0 so that it can be used by other Perl distributions.  If already
installed for your operating system, and it can be found, this distribution will use the \s-1GMP\s0
that comes with your operating system, otherwise it will download it from the Internet, build and
install it for you.
.SS "\*(C+ support"
.IX Subsection " support"
This Alien will provide the \*(C+ bindings for \s-1GMP\s0 (libgmpxx) if possible.  If you do not have a
\&\*(C+ compiler, or if your operating system vendor provides a \s-1GMP\s0 package without the needed \*(C+
files then it will not be available.  To use the \*(C+ bindings, you can use the \f(CW\*(C`alt\*(C'\fR method
to create a \*(C+ instance of this \s-1GMP\s0 Alien.  For example:
.PP
.Vb 3
\& use ExtUtils::MakeMaker;
\& use Config;
\& use Alien::GMP;
\& 
\& WriteMakefile(
\&   ...
\&   CONFIGURE_REQUIRES => {
\&     \*(AqAlien::GMP\*(Aq => \*(Aq1.06\*(Aq, # require version that provides C++ bindings
\&   },
\&   CCFLAGS => Alien::GMP\->alt(\*(Aqgmpxx\*(Aq)\->cflags . " $Config{ccflags}",
\&   LIBS    => [ Alien::GMP\->alt(\*(Aqgmpxx\*(Aq)\->libs ],
\&   ...
\& );
.Ve
.SH "Inline support"
.IX Header "Inline support"
This module supports Inline's with functionality.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1GMP\s0 <https://gmplib.org/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Original author: Richard Simões (\s-1RSIMOES\s0)
.PP
Current maintainer: Graham Ollis <plicease@cpan.org>
.PP
Contributors:
.PP
Zakariyya Mughal (\s-1ZMUGHAL\s0)
.PP
William N. Braswell, Jr. (\s-1WBRASWELL\s0)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2012\-2018 by Richard Simões.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The GNU Lesser General Public License, Version 3, June 2007
.Ve
