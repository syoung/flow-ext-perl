.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "B::Hooks::OP::PPAddr 3"
.TH B::Hooks::OP::PPAddr 3 "2017-08-26" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
B::Hooks::OP::PPAddr \- Hook into opcode execution
.SH "VERSION"
.IX Header "VERSION"
version 0.06
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    #include "hook_op_check.h"
\&    #include "hook_op_ppaddr.h"
\&
\&    STATIC OP *
\&    execute_entereval (pTHX_ OP *op, void *user_data) {
\&        ...
\&    }
\&
\&    STATIC OP *
\&    check_entereval (pTHX_ OP *op, void *user_data) {
\&        hook_op_ppaddr (op, execute_entereval, NULL);
\&    }
\&
\&    hook_op_check (OP_ENTEREVAL, check_entereval, NULL);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a C \s-1API\s0 for \s-1XS\s0 modules to hook into the execution of perl
opcodes.
.PP
ExtUtils::Depends is used to export all functions for other \s-1XS\s0 modules to
use. Include the following in your \fIMakefile.PL\fR:
.PP
.Vb 5
\&    my $pkg = ExtUtils::Depends\->new(\*(AqYour::XSModule\*(Aq, \*(AqB::Hooks::OP::PPAddr\*(Aq);
\&    WriteMakefile(
\&        ... # your normal makefile flags
\&        $pkg\->get_makefile_vars,
\&    );
.Ve
.PP
Your \s-1XS\s0 module can now include \f(CW\*(C`hook_op_ppaddr.h\*(C'\fR.
.SH "TYPES"
.IX Header "TYPES"
.SS "\s-1OP\s0"
.IX Subsection "OP"
.Vb 1
\&    typedef OP *(*hook_op_ppaddr_cb_t) (pTHX_ OP *, void *user_data)
.Ve
.PP
Type that callbacks need to implement.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "hook_op_ppaddr"
.IX Subsection "hook_op_ppaddr"
.Vb 1
\&    void hook_op_ppaddr (OP *op, hook_op_ppaddr_cb_t cb, void *user_data)
.Ve
.PP
Replace the function to execute \f(CW\*(C`op\*(C'\fR with the callback \f(CW\*(C`cb\*(C'\fR. \f(CW\*(C`user_data\*(C'\fR
will be passed to the callback as the last argument.
.SS "hook_op_ppaddr_around"
.IX Subsection "hook_op_ppaddr_around"
.Vb 1
\&    void hook_op_ppaddr_around (OP *op, hook_op_ppaddr_cb_t before, hook_op_ppaddr_cb_t after, void *user_data)
.Ve
.PP
Register the callbacks \f(CW\*(C`before\*(C'\fR and \f(CW\*(C`after\*(C'\fR to be called before and after the
execution of \f(CW\*(C`op\*(C'\fR. \f(CW\*(C`user_data\*(C'\fR will be passed to the callback as the last
argument.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
B::Hooks::OP::Check
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=B-Hooks-OP-PPAddr>
(or bug\-B\-Hooks\-OP\-PPAddr@rt.cpan.org <mailto:bug-B-Hooks-OP-PPAddr@rt.cpan.org>).
.SH "AUTHOR"
.IX Header "AUTHOR"
Florian Ragwitz <rafl@debian.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Alexandr Ciornii <alexchorny@gmail.com>
.IP "\(bu" 4
Stephan Loyd <stephanloyd9@gmail.com>
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2008 by Florian Ragwitz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
