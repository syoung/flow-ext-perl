.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ActivePerl::PPM::Arch 3"
.TH ActivePerl::PPM::Arch 3 "2017-06-23" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ActivePerl::PPM::Arch \- Get current architecture identification
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The following functions are provided:
.IP "\fBarch()\fR" 4
.IX Item "arch()"
Returns the string that \s-1PPM\s0 use to identify the architecture of the
current perl.  This is what goes into the \s-1NAME\s0 attribute of the
\&\s-1ARCHITECTURE\s0 element of the \s-1PPD\s0 files; see ActivePerl::PPM::PPD.
.Sp
This is \f(CW$Config\fR{archname} with the perl major version number
appended.
.IP "\fBshort_arch()\fR" 4
.IX Item "short_arch()"
.PD 0
.ie n .IP "short_arch( $arch )" 4
.el .IP "short_arch( \f(CW$arch\fR )" 4
.IX Item "short_arch( $arch )"
.PD
This is the shorteded architecture string; dropping the segments for
features that will always be enabled for ActivePerl (\*(L"thread\*(R",
\&\*(L"multi\*(R", \*(L"2level\*(R").
.Sp
Used to form the \s-1URL\s0 for the \s-1PPM CPAN\s0 repositories provided by
ActiveState.
.ie n .IP "full_arch( $short_arch )" 4
.el .IP "full_arch( \f(CW$short_arch\fR )" 4
.IX Item "full_arch( $short_arch )"
Convert back from a short arch string to a full one.  If the passed arch
string is already full it's returned unchanged.
.IP "\fBpretty_arch()\fR" 4
.IX Item "pretty_arch()"
.PD 0
.ie n .IP "pretty_arch( $arch )" 4
.el .IP "pretty_arch( \f(CW$arch\fR )" 4
.IX Item "pretty_arch( $arch )"
.PD
Returns a more human readable form of \fBarch()\fR.  Will be a string on the form:
.Sp
.Vb 1
\&   "ActivePerl 5.10 for Windows 64"
.Ve
.ie n .IP "versioned_arch( $arch, $version )" 4
.el .IP "versioned_arch( \f(CW$arch\fR, \f(CW$version\fR )" 4
.IX Item "versioned_arch( $arch, $version )"
Returns \f(CW$arch\fR, potentially suffixed with a version if \f(CW$version\fR is at least 5.010.
Version 5.010 would be suffixed as \*(L"\-5.10\*(R".  Returns undef if \f(CW$arch\fR is not defined.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
ppm, ActivePerl::PPM::PPD, Config
